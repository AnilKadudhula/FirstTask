// <auto-generated />
using FirstTask.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FirstTask.Migrations
{
    [DbContext(typeof(FirstTaskDBContext))]
    [Migration("20220530140644_seed")]
    partial class seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FirstTask.Data.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Completed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Home")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Open")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PeerReviews")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pendding")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Completed = "Pending",
                            Home = "Hi-Tech",
                            Open = "Status",
                            PeerReviews = "rating",
                            Pendding = "Pendding"
                        },
                        new
                        {
                            Id = 2,
                            Completed = "Pending",
                            Home = "Hi-Tech",
                            Open = "Status",
                            PeerReviews = "rating",
                            Pendding = "Pendding"
                        },
                        new
                        {
                            Id = 3,
                            Completed = "Pending",
                            Home = "Hi-Tech",
                            Open = "Status",
                            PeerReviews = "rating",
                            Pendding = "Pendding"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
